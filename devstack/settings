#!/bin/bash

# MidoNet repo
MIDONET_REPO=${MIDONET_REPO:-http://github.com/midonet/midonet.git}
MIDONET_BRANCH=${MIDONET_BRANCH:-master}
MIDONET_DIR=${MIDONET_DIR:-$DEST/midonet}

# This flag indicates to the MidoNet agent to use ZOOM instead of DataClient ZK
# backend of MidoNet NSDB.
MIDONET_USE_ZOOM=${MIDONET_USE_ZOOM:-False}

# MidoNet service endpoint configuration
MIDONET_SERVICE_API_PORT=${MIDONET_SERVICE_API_PORT:-8081}
MIDONET_SERVICE_PROTOCOL=${MIDONET_SERVICE_PROTOCOL:-$SERVICE_PROTOCOL}
MIDONET_SERVICE_HOST=${MIDONET_SERVICE_HOST:-$SERVICE_HOST}
MIDONET_API_URL="${MIDONET_SERVICE_PROTOCOL}://${MIDONET_SERVICE_HOST}:${MIDONET_SERVICE_API_PORT}/midonet-api"

# MidoNet Plugin and Client
MIDONET_PLUGIN=${MIDONET_PLUGIN:-neutron.plugins.midonet.plugin.MidonetPluginV2}
MIDONET_CLIENT=${MIDONET_CLIENT:-midonet.neutron.client.api.MidonetApiClient}

# create the fake uplink by default
MIDONET_CREATE_FAKE_UPLINK=${MIDONET_CREATE_FAKE_UPLINK:-True}

#
# Set all the devstack ENV VARS needed to run midonet in a full OpenStack
# deployment setting
#

# Disable nova-network and enable neutron services
disable_service n-net
disable_service q-fwaas
disable_service q-l3
disable_service q-agt
disable_service q-vpn
enable_service q-svc
enable_service q-lbaas
enable_service q-dhcp
enable_service q-meta

# Use IPv4
IP_VERSION=4

# Set the database driver for sqlalchemy
SQLALCHEMY_DATABASE_DRIVER=${SQLALCHEMY_DATABASE_DRIVER:-mysqlconnector}

# Tempest options
IPV6_ENABLED=False
NETWORK_API_EXTENSIONS=external-net,router,security-group,agent,dhcp_agent_scheduler,binding,quotas

# Don't let mido.sh configure the logging
CONFIGURE_LOGGING=False
